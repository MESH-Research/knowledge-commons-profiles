name: deploy

on:
  workflow_run:
    workflows: ["CI"]
    branches: [main]
    types:
      - completed

env:
  AWS_REGION: us-east-1                       # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: kcprofiles                 # set this to your Amazon ECR repository name
  ECR_REPOSITORY_TRAEFIK: kcprofiles-traefik
  ECS_SERVICE: NOT_SET_YET                    # set this to your Amazon ECS service name
  ECS_CLUSTER: NOT_SET_YET                    # set this to your Amazon ECS cluster name
  ECS_TASK_DEFINITION: NOT_SET_YET            # set this to the path to your Amazon ECS task definition
                                              # file, e.g. .aws/task-definition.json
  CONTAINER_NAME: NOT_SET_YET                 # set this to the name of the container in the
                                              # containerDefinitions section of your task definition
jobs:
  deploy-packages:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production
    # only run if the test workflow succeeded
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0e613a0980cbf65ed5b322eb7a1e075d28913a83
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@62f4f872db3836360b72999f4b87f1ff13310f3a

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker compose -f docker-compose.production.yml build

          # push the Django repository
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

          # push the Traefik repository
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_TRAEFIK:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY_TRAEFIK:latest

          # register env variables
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY_TRAEFIK:$IMAGE_TAG" >> $GITHUB_OUTPUT_TRAEFIK
